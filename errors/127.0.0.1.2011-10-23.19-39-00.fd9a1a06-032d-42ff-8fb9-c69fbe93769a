(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/ian/web2py/applications/paideia/controllers/reporting.py'
p4
sS'code'
p5
S'# coding: utf8\n# try something like\n@auth.requires_membership(role=\'administrators\')\ndef index():\n    reports = dict(attempts=\'Attemps Log\',)\n    return dict(reports=reports)\n\ndef attempts():\n    form = SQLFORM.grid(db.attempt_log)\n    return dict(form = form)\n\ndef user():\n    the_user = db.auth_user[request.args[0]]\n    the_name = the_user.last_name + \', \' + the_user.first_name\n    try:\n        attempts = db(db.attempt_log.name == request.args[0]).select()\n        s=db.attempt_log.score.sum()\n        row = db(db.attempt_log.name == request.args[0]).select(s).first()\n        answer = row[s]\n        score_avg = answer/len(attempts)\n    except:\n        score_avg = "Can\'t calculate average"\n\n    # get statistics for different classes of questions\n    q_records = db(db.q_records.name == request.args[0]).select()\n    total_len = len(q_records)\n    session.debug = total_len\n    try:\n        cat1 = q_records.find(db.q_records.category == 1)\n        total_cat1 = len(cat1)\n        cat2 = q_records.find(db.q_records.category == 2)\n        total_cat2 = len(cat2)\n        cat3 = q_records.find(db.q_records.category == 3)\n        total_cat3 = len(cat3)\n\n    except:\n        total_cat1 = "Can\'t calculate number"\n        total_cat2 = "Can\'t calculate number"\n        total_cat3 = "Can\'t calculate number"\n        total_cat4 = "Can\'t calculate number"\n\n    form = SQLFORM.grid(db.attempt_log.name == request.args[0])\n\n    return dict(form=form, score_avg=score_avg, the_name = the_name, total_cat1 = total_cat1, total_cat2 = total_cat2, total_cat3 = total_cat3, total_cat4 = total_cat4)\n\nresponse._vars=response._caller(user)\n'
p6
sS'snapshot'
p7
(dp8
sS'traceback'
p9
S'Traceback (most recent call last):\n  File "/home/ian/web2py/gluon/restricted.py", line 194, in restricted\n    exec ccode in environment\n  File "/home/ian/web2py/applications/paideia/controllers/reporting.py", line 46, in <module>\n  File "/home/ian/web2py/gluon/globals.py", line 149, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/ian/web2py/applications/paideia/controllers/reporting.py", line 25, in user\n    q_records = db(db.q_records.name == request.args[0]).select()\n  File "/home/ian/web2py/gluon/dal.py", line 4511, in __getattr__\n    return self[key]\n  File "/home/ian/web2py/gluon/dal.py", line 4505, in __getitem__\n    return dict.__getitem__(self, str(key))\nKeyError: \'q_records\'\n'
p10
s.